import os
import openai
from dotenv import load_dotenv

load_dotenv()

OPENAI_API_KEY: str | None = os.getenv("OPENAI_API_KEY")

print(f"OPENAI_API_KEY: {OPENAI_API_KEY}")


def count_used_tokens(response):
    usage = response["usage"]
    total_tokens = usage["total_tokens"]
    # üü° Used tokens this round: Prompt: 10638 tokens, Completion: 295 tokens - 0.12687 USD)
    return (
        f"üü° Used tokens this round: {total_tokens} "
        # + f"Prompt: {total_tokens} tokens, "
        # + f"Completion: {total_tokens} tokens"
    )


with open("input.txt", "r", encoding="utf-8") as file:
    text = file.read()

openai.api_key = OPENAI_API_KEY

TASK = """
Por favor, analise a seguinte transcri√ß√£o de √°udio de uma reuni√£o e extraia as seguintes informa√ß√µes:

1. Itens acion√°veis:
    1. Itens da agenda
    2. Tarefas e delega√ß√µes
    3. Reuni√µes e liga√ß√µes de acompanhamento
    4. Prazos finais

2. Instru√ß√µes Diretas: Identifique quaisquer gatilhos de a√ß√£o presentes na transcri√ß√£o.

3. T√≥picos Discutidos: Liste os principais t√≥picos discutidos durante a reuni√£o.

4. Participantes: Identifique os participantes e analise o estilo de fala e as palavras usadas por eles. Separe por assuntos (assunto1, assunto2,‚Ä¶).

5. Decis√µes Tomadas: Registre todas as decis√µes tomadas durante a reuni√£o.

6. Pontos Principais: Destaque os pontos principais e principais ideias de cada t√≥pico.

7. Perguntas e Respostas: Documente quaisquer perguntas feitas e as respostas dadas.

8. Problemas e Solu√ß√µes: Identifique qualquer problema levantado e as solu√ß√µes propostas ou implementadas.

9. Dados de Suporte ou Evid√™ncias: Identifique quaisquer dados ou evid√™ncias que apoiem as decis√µes tomadas ou os pontos discutidos. Indique tamb√©m qualquer liga√ß√£o que possa estar faltando.

10. Emo√ß√µes: Descreva as emo√ß√µes exibidas pelos participantes durante a reuni√£o.

11. Consenso e Desacordos: Indique se houve consenso ou desacordos em rela√ß√£o √†s decis√µes ou t√≥picos.

12. Contexto da Reuni√£o: Forne√ßa quaisquer informa√ß√µes contextuais dispon√≠veis que possam ajudar a moldar a an√°lise.

13. An√°lise Sentimental: Fa√ßa uma an√°lise do sentimento geral em rela√ß√£o a certos t√≥picos ou decis√µes tomadas.

14. Linguagem Figurativa: Identifique e interprete quaisquer frases idiom√°ticas, met√°foras ou outras formas de linguagem figurativa.

15. Efic√°cia da Reuni√£o: Avalie qu√£o efetivamente o tempo foi usado e o quanto do conte√∫do da agenda foi coberto.

16. Aspectos Culturais: Identifique e compreenda quaisquer nuances culturais que possam influenciar a interpreta√ß√£o do texto.
"""

PROMPT = f"Given the following transcription:  [{text}] \n {TASK}"

response = openai.ChatCompletion.create(
    model="gpt-4",
    messages=[
        {"role": "system", "content": "You are a helpful assistant."},
        {"role": "user", "content": PROMPT},
    ],
)


summary = response["choices"][0]["message"]["content"].strip()


# Save the summary into another TXT file
with open("openai_summary.txt", "w", encoding="utf-8") as file:
    file.write(summary)

print(count_used_tokens(response))
